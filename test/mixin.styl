// @describe Selector mixin

// @it Simple first level applying

.button
    color #fff

.block
    mixin('.button', false)

// @expects

.button{color:#fff}
.block{color:#fff}


// @it Simple second level applying

.button
    color #fff

.block
    &__element
        mixin('.button', false)

        background-color #000

// @expects

.button{color:#fff}
.block__element{color:#fff;background-color:#000}


// @it Complex selector applying

.button
    color #fff

    &:hover
        text-decoration none

.block
    &__element
        mixin('.button', false)

        background-color #000

        &:hover
            mixin('.button:hover')

// @expects

.button{color:#fff}
.button:hover{text-decoration:none}
.block__element{color:#fff;background-color:#000}
.block__element:hover{text-decoration:none}


// @it Complex selector applying with `@extend` in it

.to-extend
    border-width 0

.button
    color #fff

    &:hover
        @extend .to-extend

        text-decoration none

.block
    &__element
        mixin('.button', false)

        background-color #000

        &:hover
            mixin('.button:hover')

// @expects

.block__element:hover,.button:hover,.to-extend{border-width:0}
.button{color:#fff}
.button:hover{text-decoration:none}
.block__element{color:#fff;background-color:#000}
.block__element:hover{text-decoration:none}


// @it Complex selector applying with `@extend` in it. Inserting extend properties

.to-extend
    border-width 0

.button
    color #fff

    &:hover
        @extend .to-extend

        text-decoration none

.block
    &__element
        mixin('.button', false)

        background-color #000

        &:hover
            mixin('.button:hover', false, true)

// @expects
.button:hover,.to-extend{border-width:0}
.button{color:#fff}
.button:hover{text-decoration:none}
.block__element{color:#fff;background-color:#000}
.block__element:hover{border-width:0;text-decoration:none}


// @it [TODO] Complex selector applying with `@extend` in it. Inserting nested extend properties

// .to-extend
//     border-width 0

// .button
//     color #fff

//     &__inner
//         @extend .to-extend

//         color #000

//         &:focus
//             @extend .to-extend

//             color #00f

//     &.is-hover
//     &:hover
//         @extend .to-extend

//         text-decoration none

// .block
//     &__element
//         mixin('.button', false)

//         background-color #000

//         &:hover
//             mixin('.button__inner', true, true)

// @expects

/* .button.is-hover,
.button:hover,
.button__inner,
.button__inner:focus,
.to-extend{border-width:0}

.button{color:#fff}
.button__inner{color:#000}
.button__inner:focus{color:#00f}
.button.is-hover,
.button:hover{text-decoration:none}
.block__element{color:#fff;background-color:#000}
.block__element:hover{border-width:0;color:#000}
.block__element:hover:focus{border-width:0;color:#00f} */


// @it Nonexistent mixin selector

.button
    mixin('.some-button', false)

    color #000


.block
    mixin('.some-block', false)

// @expects

.button{color:#000}


// @it Multiple rulesets

.button
    background-color #000

.to-extend
    border-width 0

.button
    @extend .to-extend

    color #fff

.block
    mixin('.button', false)

// @expects

.button{background-color:#000}
.block,.button,.to-extend{border-width:0}
.button{color:#fff}
.block{background-color:#000;color:#fff}