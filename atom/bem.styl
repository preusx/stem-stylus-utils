/* ========================================================================
 * Bem style helpers.
 * ======================================================================== */

/**
 * Variables
 * ======================================================================== */

$bem_prefix        ?= ''
$bem_prefix_state  ?= 'is'

$bem_ps  ?= '-'                         // Bem prefix separator
$bem_es  ?= '__'                        // Bem element separator
$bem_ms  ?= '--'                        // Bem mod separator
$bem_mps ?= '_'                         // Bem mod parameter separator

$bem_use_shortcuts ?= false


/**
 * Mixins
 * ======================================================================== */

bem_get_reg_exp()
    /**
     * Block parts regular expression.
     *
     * $3   - Prefix
     * $5   - Block name
     * $8   - Element name
     * $11  - Modificator name
     */
    return '(\.)' +\
        '(([a-z0-9]{1,3})(' + $bem_ps + ')|)' +\
        '([a-z0-9]+)' +\
        '((' + $bem_es + ')([a-z0-9]+)|)' +\
        '((' + $bem_ms + ')([a-z0-9_]+)|)'


bem_get_selector_parts()
    $parsed = split(reg_replace(selector(), bem_get_reg_exp(),
        '$3,$5,$8,$11'), ',');

    return {
        prefix: $parsed[0]
        block: $parsed[1]
        element: $parsed[2]
        mod: $parsed[3]
    }


bem_get_block_selector()
    $prefix = reg_replace(selector(), bem_get_reg_exp(), '$3')
    $prefix = $prefix ? $prefix : $bem_prefix

    if !$prefix
        return reg_replace(selector(), bem_get_reg_exp(), '$5')
    else
        return $prefix + $bem_ps +\
            reg_replace(selector(), bem_get_reg_exp(), '$5')


bem_get_element_selector()
    $element_name = reg_replace(selector(), bem_get_reg_exp(), '$8')

    if !$element_name
        return bem_get_block_selector()
    else
        return bem_get_block_selector() + $bem_es + $element_name


bem_compose($block_name, $element_name='', $modifer_name='', $p=$bem_prefix, $m=$modifer_name)
    return ($p ? $p + $bem_ps : '') +\
        $block_name +\
        ($element_name ? $bem_es + $element_name : '') +\
        ($m ? $bem_ms + $m : '')


/**
 * Bem block mixins.
 *
 * WARNING: Don't use this mixins for now! Partially working.
 *
 * Unfortunately in some cases those things wouldn't work now beause of stylus
 * have problems with selectors in the block mixins.
 */

/**
 * Bem block.
 */
bem_b($block_name, $prefix=$bem_prefix)
    if block is defined
        name = bem_compose($block_name, $p:$prefix)
        /.{name}
            {block}
    else
        return name


/**
 * Bem block placeholders namespace.
 */
bem_p()
    if block is defined
        /${bem_get_element_selector()}{$bem_ms}
            {block}
    else
        return bem_get_element_selector() + $bem_ms


/**
 * Bem block elements namespace.
 */
bem_e()
    if block is defined
        &{$bem_es}
            {block}
    else
        return bem_get_block_selector() + $bem_es


/**
 * Bem block modifers namespace.
 */
bem_m()
    if block is defined
        &{$bem_ms}
            {block}
    else
        return bem_get_element_selector() + $bem_ms


/**
 * Bem block states namespace.
 */
bem_s()
    if block is defined
        &.{$bem_prefix_state}{$bem_ps}
            {block}
    else
        return selector('&') + '.' + $bem_prefix_state + $bem_ps


/**
 * Bem shortcuts for the namespace mixins.
 */
if $bem_use_shortcuts
    b = bem_b
    e = bem_e
    m = bem_m

