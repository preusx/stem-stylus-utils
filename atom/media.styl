@require 'utility'
@require 'is'

/**
 * Variables
 * ======================================================================== */

$media_cachable = false
$_media_cache   = {}

$media_templates = extend({
        'min'    : "only screen and (min-width: %s)"
        'max'    : "only screen and (max-width: %s)"
        'minMax' : "only screen and (min-width: %s) and (max-width: %s)"
    }, $media_cachable)

$media_sizes = extend({
        'xsmall'     : (0        640px)
        'small'      : (640px    992px)
        'medium'     : (993px    1224px)
        'large'      : (1225px   1440px)
        'xlarge'     : (1441px   1920px)
        'xxlarge'    : (1921px   5120px)
    }, $media_vars)


$media_queries = extend({
        'xsmall'        : ($media_sizes.xsmall[0]    0),
        'xsmall-only'   : ($media_sizes.xsmall[0]    $media_sizes.xsmall[1]),
        'small'         : ($media_sizes.small[0]     0),
        'small-only'    : ($media_sizes.small[0]     $media_sizes.small[1]),
        'medium'        : ($media_sizes.medium[0]    0),
        'medium-only'   : ($media_sizes.medium[0]    $media_sizes.medium[1]),
        'large'         : ($media_sizes.large[0]     0),
        'large-only'    : ($media_sizes.large[0]     $media_sizes.large[1]),
        'xlarge'        : ($media_sizes.xlarge[0]    0),
        'xxlarge'       : ($media_sizes.xxlarge[0]   0)

    }, $media_queries)

// Query aliases
$media_queries['xs']        = $media_queries['xsmall']
$media_queries['sm']        = $media_queries['small']
$media_queries['md']        = $media_queries['medium']
$media_queries['lg']        = $media_queries['large']
$media_queries['desktop']   = $media_queries['large']



/**
 * Mixins
 * ======================================================================== */

media_query($from, $to=0)
    $query = ''
    $sizes = ($from $to)

    if is_string($from)
        if !$media_queries[$from]
            return $from

        $sizes = $media_queries[$from]

    if ($sizes[0] >= 0) && ($sizes[1] >= 0) && ($sizes[0] != $sizes[1])
        if $sizes[0] > $sizes[1]
            $query = $media_templates.min % $sizes[0]
        else if $sizes[0] == 0
            $query = $media_templates.max % $sizes[1]
        else
            $query = $media_templates.minMax % ($sizes[0] $sizes[0])

    return $query


media($from, $to=0)
    $query = media_query($from, $to)

    if !!$query
        if $media_cachable
            helper($query)
                unless $_media_cache[$query]
                    $_media_cache[$query] = ()

                push($_media_cache[$query], block)

            +helper($query)
                {selector() + ''}
                    {block}

        else
            @media $query
                {block}

    else
        {block}


media-respond($pfixes=('' ''), $default=true)
    if $default
        {block}

    for $type in ('xs' 'sm' 'md' 'lg')
        &{$pfixes[0]}{$type}{$pfixes[1]}
            +media($type)
                {block}


media-apply-cache()
    for $query, $blocks in $_media_cache
        @media $query
            for $block in $blocks
                {$block}

