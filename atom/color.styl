/**
 * Variables
 * ======================================================================== */

$color_rate_saturation ?= 0.0%
$color_rate_lightness  ?= 2%
$color_rate_darkness   ?= $color_rate_lightness
$color_rate_lighten    ?= (0.06 0.14 1)
$color_rate_darken     ?= (0.06 0.14 1)


/**
 * Mixins
 * ======================================================================== */

/**
 * Middle between two colors.
 */
color_middle($first, $second)
    return rgba(\
        floor((red($first)   + red($second))   / 2),\
        floor((green($first) + green($second)) / 2),\
        floor((blue($first)  + blue($second))  / 2),\
        floor((alpha($first) + alpha($second)) / 2)\
        )

/**
 * Color half lightness.
 */
color_half($color)
    $l = lightness($color)
    $lAdd = ($l > 50% ? -1 : 1) * ($l / 2)

    return lightness($color, $l + $lAdd)


/**
 * Lights the color by the grade.
 */
color_light($color, $grade)
    $st = saturation($color) + ($grade * $color_rate_saturation)

    if $grade < 0
        rate = lightness($color) > 75% ?\
            $color_rate_lightness * 2 : $color_rate_lightness
    else
        rate = lightness($color) < 25% ?\
            $color_rate_darkness * 2 : $color_rate_darkness

    $lt = lightness($color) - (rate * $grade)

    return rgba(hsla(hue($color), $st, $lt, alpha($color)))


/**
 * Lighten and darken functions for non-grayscale colors.
 */
color_lighten($color, $by)
    $h = hue($color)
    $s = to_raw_percent(saturation($color))
    $l = to_raw_percent(lightness($color))
    $by = to_raw_percent($by)

    return rgba(hsla(\
        ($h + $h * ($by * $color_rate_lighten[0])),\
        100% * ($s + $s * ($by * $color_rate_lighten[1])),\
        100% * ($l + $l * ($by * $color_rate_lighten[2])),\
        alpha($color)\
        ))


color_darken($color, $by)
    $h = hue($color)
    $s = to_raw_percent(saturation($color))
    $l = to_raw_percent(lightness($color))
    $by = to_raw_percent($by)

    return rgba(hsla(\
        ($h - $h * ($by * $color_rate_darken[0])),\
        100% * ($s - $s * ($by * $color_rate_darken[1])),\
        100% * ($l - $l * ($by * $color_rate_darken[2])),\
        alpha($color)\
        ))


/**
 * Depenfing on provided background-color makes text color dark or light.
 */
color-depends($color_light, $color_dark, $background=@background-color)
    if contrast($background, $color_light).ratio > \
            contrast($background, $color_dark).ratio
        color $color_light
    else
        color $color_dark
