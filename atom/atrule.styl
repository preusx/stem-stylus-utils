use('./atrule.js')

/**
 * Mixins
 * ======================================================================== */

/**
 * Partial at(@) rule.
 *
 * Interpolates the css properties of current selector to get precified.
 * Working only with the border, padding and margin properties.
 *
 * @param {string} [$property] - Property that you need.
 * @returns {mixed} - Value of property or 0 if cant get.
 */
at_partial($property)
    $list = split($property, '-')
    $temp = null
    $result = 0

    if $list[0] == 'border'
        $ats = {
            'border':               @border
            'border-bottom':        @border-bottom
            'border-bottom-color':  @border-bottom-color
            'border-bottom-style':  @border-bottom-style
            'border-bottom-width':  @border-bottom-width
            'border-color':         @border-color
            'border-left':          @border-left
            'border-left-color':    @border-left-color
            'border-left-style':    @border-left-style
            'border-left-width':    @border-left-width
            'border-right':         @border-right
            'border-right-color':   @border-right-color
            'border-right-style':   @border-right-style
            'border-right-width':   @border-right-width
            'border-style':         @border-style
            'border-top':           @border-top
            'border-top-color':     @border-top-color
            'border-top-style':     @border-top-style
            'border-top-width':     @border-top-width
            'border-width':         @border-width
        }

        $positions = {
            'width':    0,
            'style':    1,
            'color':    2
        }

        _border_part($value, $part)
            if $value
                return $value[$positions[$part]]
            else
                return null

        $temp = $ats[$property]

        unless $temp
            if length($list) == 3
                unless $temp // Searching for the border-{position} $property
                    $temp = _border_part($ats[$list[0] + '-' + $list[1]], $list[2])

                    unless $temp // Searching for the border-{$property}
                        $temp = $ats[$list[0] + '-' + $list[2]]

                        unless $temp // Getting border $property
                            $temp = _border_part($ats[$list[0]], $list[2])

            if length($list) == 2
                if $list[1] in ('left' 'right' 'top' 'bottom')
                    $temp = $ats[$list[0]]
                else
                    $temp = _border_part($ats[$list[0]], $list[1])

    if $list[0] in ('margin' 'padding')
        $ats = {
            'margin':               @margin
            'margin-bottom':        @margin-bottom
            'margin-left':          @margin-left
            'margin-right':         @margin-right
            'margin-top':           @margin-top
            'padding':              @padding
            'padding-bottom':       @padding-bottom
            'padding-left':         @padding-left
            'padding-right':        @padding-right
            'padding-top':          @padding-top
        }

        $temp = $ats[$property]

        if length($list) == 2
            $positions = {
                'top':      (0 0),
                'right':    (1 1),
                'bottom':   (0 2),
                'left':     (1 3)
            }
            $properties = {}

            unless $temp
                $temp = $ats[$list[0]]

                if $temp
                    if length($temp) > 1
                        for $prop, $pos in $positions
                            $properties[$prop] = $temp[$pos[1]] ?\
                                $temp[$pos[1]] : $temp[$pos[0]]

                        $temp = $properties[$list[1]]

    if $temp
        $result = $temp

    return $result